{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nguyen/workspace/projects/eparking/WebForPartner/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport withRedux from 'next-redux-wrapper';\nimport { useEffect, useState } from 'react'; // Redux\n\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify'; // Components\n\nimport { Footer, Header } from '@components/index'; // Languages\n\nimport { appWithTranslation, i18n } from '@languages/index';\nimport reduxStore from '@redux/store';\n/**\n * App layout\n * @author: Giang Nguyen\n */\n\nconst AppLayout = props => {\n  const {\n    Component,\n    pageProps,\n    store,\n    router\n  } = props;\n  const {\n    0: pageLoading,\n    1: setPageLoading\n  } = useState(true);\n\n  const loadPage = () => {\n    setPageLoading(true);\n    let interval = setInterval(() => {\n      if (!process.server && document.readyState === 'complete') {\n        clearInterval(interval);\n        setTimeout(() => {\n          setPageLoading(false);\n        }, 500);\n      }\n    }, 100);\n  };\n\n  useEffect(() => {\n    loadPage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layouts__app\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        pageLoading: pageLoading,\n        router: router\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layouts__app-body\",\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n          router: router,\n          locale: i18n.language ? i18n.language : 'en'\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        pageLoading: pageLoading,\n        router: router\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\nAppLayout.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  return {\n    pageProps: _objectSpread({}, Component.getInitialProps ? await Component.getInitialProps(ctx) : {})\n  };\n};\n\nexport default withRedux(reduxStore)(appWithTranslation(AppLayout));","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForPartner/pages/_app.tsx"],"names":["withRedux","useEffect","useState","Provider","ToastContainer","Footer","Header","appWithTranslation","i18n","reduxStore","AppLayout","props","Component","pageProps","store","router","pageLoading","setPageLoading","loadPage","interval","setInterval","process","server","document","readyState","clearInterval","setTimeout","language","getInitialProps","ctx"],"mappings":";;;;;;;;;AACA,OAAOA,SAAP,MAAsB,oBAAtB;AAEA,SAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B,C,CACA;;AACA,SAASC,kBAAT,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;;AAeA,MAAMC,SAA2B,GAAIC,KAAD,IAAW;AAC3C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA;AAA/B,MAA0CJ,KAAhD;AACA,QAAM;AAAA,OAACK,WAAD;AAAA,OAAcC;AAAd,MAAgCf,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMgB,QAAQ,GAAG,MAAM;AACnBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,QAAIE,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC7B,UAAI,CAACC,OAAO,CAACC,MAAT,IAAmBC,QAAQ,CAACC,UAAT,KAAwB,UAA/C,EAA2D;AACvDC,QAAAA,aAAa,CAACN,QAAD,CAAb;AACAO,QAAAA,UAAU,CAAC,MAAM;AACbT,UAAAA,cAAc,CAAC,KAAD,CAAd;AACH,SAFS,EAEP,GAFO,CAAV;AAGH;AACJ,KAPyB,EAOvB,GAPuB,CAA1B;AAQH,GAVD;;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAA,8BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEE,WAArB;AAAkC,QAAA,MAAM,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI,QAAC,SAAD,kCAAeF,SAAf;AAA0B,UAAA,MAAM,EAAEE,MAAlC;AAA0C,UAAA,MAAM,EAAEP,IAAI,CAACmB,QAAL,GAAgBnB,IAAI,CAACmB,QAArB,GAAgC;AAAlF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEX,WAArB;AAAkC,QAAA,MAAM,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhCD;;AAkCAL,SAAS,CAACkB,eAAV,GAA4B,OAAO;AAAEhB,EAAAA,SAAF;AAAaiB,EAAAA;AAAb,CAAP,KAA0C;AAClE,SAAO;AACHhB,IAAAA,SAAS,oBACDD,SAAS,CAACgB,eAAV,GAA4B,MAAMhB,SAAS,CAACgB,eAAV,CAA0BC,GAA1B,CAAlC,GAAmE,EADlE;AADN,GAAP;AAKH,CAND;;AAQA,eAAe7B,SAAS,CAACS,UAAD,CAAT,CAAsBF,kBAAkB,CAACG,SAAD,CAAxC,CAAf","sourcesContent":["import { Router } from 'next-i18next';\nimport withRedux from 'next-redux-wrapper';\nimport { AppContext, AppInitialProps } from 'next/app';\nimport { Component, useEffect, useState } from 'react';\n// Redux\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\n// Components\nimport { Footer, Header } from '@components/index';\n// Languages\nimport { appWithTranslation, i18n } from '@languages/index';\nimport reduxStore from '@redux/store';\n\n/**\n * App layout\n * @author: Giang Nguyen\n */\ninterface Props extends AppInitialProps {\n    Component: React.FC<Component>;\n    store: any;\n    router: Router;\n}\ninterface Process {\n    server: boolean;\n}\ndeclare var process: Process;\n\ninterface INextPage<P = {}> extends React.FC<P> {\n    getInitialProps: (props: AppContext) => Promise<{ pageProps: any }>;\n}\n\nconst AppLayout: INextPage<Props> = (props) => {\n    const { Component, pageProps, store, router } = props;\n    const [pageLoading, setPageLoading] = useState(true);\n\n    const loadPage = () => {\n        setPageLoading(true);\n        let interval = setInterval(() => {\n            if (!process.server && document.readyState === 'complete') {\n                clearInterval(interval);\n                setTimeout(() => {\n                    setPageLoading(false);\n                }, 500);\n            }\n        }, 100);\n    };\n\n    useEffect(() => {\n        loadPage();\n    }, []);\n\n    return (\n        <div className=\"layouts__app\">\n            <Provider store={store}>\n                <ToastContainer />\n                <Header pageLoading={pageLoading} router={router} />\n                <div className=\"layouts__app-body\">\n                    <Component {...pageProps} router={router} locale={i18n.language ? i18n.language : 'en'} />\n                </div>\n                <Footer pageLoading={pageLoading} router={router} />\n            </Provider>\n        </div>\n    );\n};\n\nAppLayout.getInitialProps = async ({ Component, ctx }: AppContext) => {\n    return {\n        pageProps: {\n            ...(Component.getInitialProps ? await Component.getInitialProps(ctx) : {}),\n        },\n    };\n};\n\nexport default withRedux(reduxStore)(appWithTranslation(AppLayout));\n"]},"metadata":{},"sourceType":"module"}