{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nguyen/workspace/projects/eparking/WebForPartner/pages/_error.tsx\";\nimport React from 'react'; // Languages\n\nimport { useTranslation } from '@languages/i18n';\n/**\n * Error page\n * @author: Giang Nguyen\n */\n\nconst ErrorPage = props => {\n  const {\n    statusCode\n  } = props;\n  const {\n    t\n  } = useTranslation(['common']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white\",\n      children: statusCode ? t('error-with-status', {\n        statusCode\n      }) : t('error-without-status')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nErrorPage.getInitialProps = async ({\n  res,\n  err\n}) => {\n  let statusCode = null;\n\n  if (res) {\n    ({\n      statusCode\n    } = res);\n  } else if (err) {\n    ({\n      statusCode\n    } = err);\n  }\n\n  return {\n    namespacesRequired: ['common'],\n    statusCode\n  };\n};\n\nexport default ErrorPage;","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForPartner/pages/_error.tsx"],"names":["React","useTranslation","ErrorPage","props","statusCode","t","getInitialProps","res","err","namespacesRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,SAASC,cAAT,QAA+B,iBAA/B;AAEA;AACA;AACA;AACA;;AAQA,MAAMC,SAAgC,GAAIC,KAAD,IAAW;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAQJ,cAAc,CAAC,CAAC,QAAD,CAAD,CAA5B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,4DAAf;AAAA,2BACI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,gBAA2BG,UAAU,GAAGC,CAAC,CAAC,mBAAD,EAAsB;AAAED,QAAAA;AAAF,OAAtB,CAAJ,GAA4CC,CAAC,CAAC,sBAAD;AAAlF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARD;;AAUAH,SAAS,CAACI,eAAV,GAA4B,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA6B;AACrD,MAAIJ,UAAU,GAAG,IAAjB;;AACA,MAAIG,GAAJ,EAAS;AACL,KAAC;AAAEH,MAAAA;AAAF,QAAiBG,GAAlB;AACH,GAFD,MAEO,IAAIC,GAAJ,EAAS;AACZ,KAAC;AAAEJ,MAAAA;AAAF,QAAiBI,GAAlB;AACH;;AACD,SAAO;AACHC,IAAAA,kBAAkB,EAAE,CAAC,QAAD,CADjB;AAEHL,IAAAA;AAFG,GAAP;AAIH,CAXD;;AAaA,eAAeF,SAAf","sourcesContent":["import React from 'react';\n\n// Languages\nimport { AppInitialProps } from 'next/app';\nimport { useTranslation } from '@languages/i18n';\n\n/**\n * Error page\n * @author: Giang Nguyen\n */\ninterface Props extends AppInitialProps {\n    statusCode: number;\n}\ninterface INextErrorPage<P = {}> extends React.FC<P> {\n    getInitialProps: ({ res, err }: any) => Promise<{ namespacesRequired: string[]; statusCode: number }>;\n}\n\nconst ErrorPage: INextErrorPage<Props> = (props) => {\n    const { statusCode } = props;\n    const { t } = useTranslation(['common']);\n    return (\n        <div className=\"container d-flex justify-content-center align-items-center\">\n            <p className=\"text-white\">{statusCode ? t('error-with-status', { statusCode }) : t('error-without-status')}</p>\n        </div>\n    );\n};\n\nErrorPage.getInitialProps = async ({ res, err }: any) => {\n    let statusCode = null;\n    if (res) {\n        ({ statusCode } = res);\n    } else if (err) {\n        ({ statusCode } = err);\n    }\n    return {\n        namespacesRequired: ['common'],\n        statusCode,\n    };\n};\n\nexport default ErrorPage;\n"]},"metadata":{},"sourceType":"module"}