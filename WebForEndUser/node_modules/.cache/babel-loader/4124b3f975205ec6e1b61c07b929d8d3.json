{"ast":null,"code":"var _jsxFileName = \"/home/nguyen/workspace/projects/eparking/WebForEndUser/src/components/otpInput/index.tsx\";\nimport './index.scss';\nimport React, { useEffect, useState } from 'react'; // Declare component props\n\nexport const OTPInputView = props => {\n  const {\n    onClick,\n    codeLength = 6\n  } = props;\n  const {\n    size = 4\n  } = props;\n  const [inputCode, setInputCode] = useState(\"\");\n  useEffect(() => {}, []);\n  const CodeElements = [];\n\n  for (let i = 0; i < codeLength; i++) {\n    CodeElements.push( /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"ma1 br3 animate__animated animate__bounceIn flex center-items bg-hard-light bg-hard-light bg-med-dark ba bc-light\",\n      style: {\n        animationDelay: `${(i + 1) * 100}ms`,\n        width: `${size}rem`,\n        height: `${size}rem`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"f3 light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, inputCode[i] || \"\")));\n  }\n\n  const onInputOTP = otp => {\n    if (otp.length > 6) return;\n\n    if (otp.length === 6) {\n      var _props$onCodeFilled;\n\n      (_props$onCodeFilled = props.onCodeFilled) === null || _props$onCodeFilled === void 0 ? void 0 : _props$onCodeFilled.call(props, otp);\n    }\n\n    setInputCode(otp);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row relative\",\n    onClick: onClick === null || onClick === void 0 ? void 0 : onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex relative center-items w-auto-ns w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: inputCode,\n    onChange: e => onInputOTP(e.target.value),\n    className: \"absolute top-0 h-100 bg-red w-100 o-0 z-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), CodeElements));\n};\nOTPInputView.defaultProps = {\n  onClick: () => {}\n};","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/components/otpInput/index.tsx"],"names":["React","useEffect","useState","OTPInputView","props","onClick","codeLength","size","inputCode","setInputCode","CodeElements","i","push","animationDelay","width","height","onInputOTP","otp","length","onCodeFilled","e","target","value","defaultProps"],"mappings":";AAAA,OAAO,cAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AAQA,OAAO,MAAMC,YAA4C,GAAIC,KAAD,IAAW;AACnE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAU,GAAG;AAAxB,MAA8BF,KAApC;AACA,QAAM;AAAEG,IAAAA,IAAI,GAAG;AAAT,MAAeH,KAArB;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACA,QAAMS,YAAY,GAAG,EAArB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAApB,EAAgCK,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,YAAY,CAACE,IAAb,eACI;AACI,MAAA,GAAG,EAAED,CADT;AAEI,MAAA,SAAS,EAAC,mHAFd;AAGI,MAAA,KAAK,EAAE;AACHE,QAAAA,cAAc,EAAG,GAAE,CAACF,CAAC,GAAG,CAAL,IAAU,GAAI,IAD9B;AAEHG,QAAAA,KAAK,EAAG,GAAEP,IAAK,KAFZ;AAGHQ,QAAAA,MAAM,EAAG,GAAER,IAAK;AAHb,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBC,SAAS,CAACG,CAAD,CAAT,IAAgB,EAAzC,CARJ,CADJ;AAYH;;AACD,QAAMK,UAAU,GAAIC,GAAD,IAAiB;AAChC,QAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;;AACpB,QAAID,GAAG,CAACC,MAAJ,KAAe,CAAnB,EAAsB;AAAA;;AAClB,6BAAAd,KAAK,CAACe,YAAN,iFAAAf,KAAK,EAAgBa,GAAhB,CAAL;AACH;;AACDR,IAAAA,YAAY,CAACQ,GAAD,CAAZ;AACH,GAND;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,OAAO,EAAEZ,OAAF,aAAEA,OAAF,uBAAEA,OAAO,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAEG,SAFX;AAGI,IAAA,QAAQ,EAAGY,CAAD,IAAOJ,UAAU,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAH/B;AAII,IAAA,SAAS,EAAC,2CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKZ,YAPL,CADJ,CADJ;AAaH,CAxCM;AA0CPP,YAAY,CAACoB,YAAb,GAA4B;AACxBlB,EAAAA,OAAO,EAAE,MAAM,CAAE;AADO,CAA5B","sourcesContent":["import './index.scss';\n\nimport React, { useEffect, useState } from 'react';\n\n// Declare component props\nexport interface IOTPInputViewProps {\n    onClick?: () => any;\n    codeLength?: number;\n    size?: number;\n    onCodeFilled?: (code: string) => any;\n}\n\nexport const OTPInputView: IComponent<IOTPInputViewProps> = (props) => {\n    const { onClick, codeLength = 6 } = props;\n    const { size = 4 } = props;\n    const [inputCode, setInputCode] = useState(\"\");\n    useEffect(() => {}, []);\n    const CodeElements = [];\n    for (let i = 0; i < codeLength; i++) {\n        CodeElements.push(\n            <div\n                key={i}\n                className=\"ma1 br3 animate__animated animate__bounceIn flex center-items bg-hard-light bg-hard-light bg-med-dark ba bc-light\"\n                style={{\n                    animationDelay: `${(i + 1) * 100}ms`,\n                    width: `${size}rem`,\n                    height: `${size}rem`,\n                }}>\n                <p className=\"f3 light\">{inputCode[i] || \"\"}</p>\n            </div>,\n        );\n    }\n    const onInputOTP = (otp: string) => {\n        if (otp.length > 6) return;\n        if (otp.length === 6) {\n            props.onCodeFilled?.(otp);\n        }\n        setInputCode(otp);\n    };\n    return (\n        <div className=\"flex flex-row relative\" onClick={onClick?.()}>\n            <div className=\"flex relative center-items w-auto-ns w-100\">\n                <input\n                    type=\"number\"\n                    value={inputCode}\n                    onChange={(e) => onInputOTP(e.target.value)}\n                    className=\"absolute top-0 h-100 bg-red w-100 o-0 z-1\"\n                />\n                {CodeElements}\n            </div>\n        </div>\n    );\n};\n\nOTPInputView.defaultProps = {\n    onClick: () => {},\n};\n"]},"metadata":{},"sourceType":"module"}