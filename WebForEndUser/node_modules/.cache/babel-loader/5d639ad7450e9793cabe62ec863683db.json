{"ast":null,"code":"var _jsxFileName = \"/home/nguyen/workspace/projects/eparking/WebForEndUser/src/pages/login/signin.tsx\";\nimport React, { useState } from 'react';\nimport { HeaderGradientIcon } from '@components/headerGradientIcon';\nimport { InputWithPrefix } from '@components/inputWithPrefix';\nimport { PrefixSelector } from '@components/prefixSelector';\nimport { RippleButton } from '@components/rippleButton';\nimport { useTypedTranslation } from '@languages/typedTranslation';\nexport const LoginSignInPage = props => {\n  var _props$currentPrefix, _props$currentPrefix2;\n\n  const {\n    t\n  } = useTypedTranslation();\n  const [phone, setPhone] = useState(\"\");\n  const [isValidPhone, setIsValidPhone] = useState(false);\n\n  const onPressContinue = () => {\n    var _props$onPressContinu;\n\n    return (_props$onPressContinu = props.onPressContinue) === null || _props$onPressContinu === void 0 ? void 0 : _props$onPressContinu.call(props, phone);\n  };\n\n  const onChangePrefix = prefix => {\n    var _props$onChangePrefix;\n\n    return (_props$onChangePrefix = props.onChangePrefix) === null || _props$onChangePrefix === void 0 ? void 0 : _props$onChangePrefix.call(props, prefix);\n  };\n\n  const onInputPhone = pNumber => {\n    setPhone(pNumber);\n\n    if (pNumber.length >= 9) {\n      setIsValidPhone(true);\n    } else {\n      setIsValidPhone(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 tl-ns tc pb4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 db-ns dn pb3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderGradientIcon, {\n    size: 96,\n    src: \"/images/phone.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"pa0 f2 ma0 mb2 hard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, t(\"loginTitle\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"f5 w-100 pa0 pb3 ma0 light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, t(\"loginSubTitle\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt4 mt3-ns w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PrefixSelector, {\n    classContainer: \"w-100 mwx7-ns\",\n    currentPrefixCode: (_props$currentPrefix = props.currentPrefix) === null || _props$currentPrefix === void 0 ? void 0 : _props$currentPrefix.code,\n    onSelectPrefix: onChangePrefix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InputWithPrefix, {\n    onPhoneInput: onInputPhone,\n    currPrefix: (_props$currentPrefix2 = props.currentPrefix) === null || _props$currentPrefix2 === void 0 ? void 0 : _props$currentPrefix2.dial_code,\n    classContainer: \"w-100 mwx7-ns mt3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(RippleButton, {\n    className: \"mt3 bg-silver dark\",\n    disabled: !isValidPhone,\n    activeClass: \"bg-prime white shadow\",\n    onClick: onPressContinue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"pr5 pl5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, t(\"continue\")))));\n};","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/pages/login/signin.tsx"],"names":["React","useState","HeaderGradientIcon","InputWithPrefix","PrefixSelector","RippleButton","useTypedTranslation","LoginSignInPage","props","t","phone","setPhone","isValidPhone","setIsValidPhone","onPressContinue","onChangePrefix","prefix","onInputPhone","pNumber","length","currentPrefix","code","dial_code"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,mBAAT,QAAoC,6BAApC;AAEA,OAAO,MAAMC,eAIX,GAAIC,KAAD,IAAW;AAAA;;AACZ,QAAM;AAAEC,IAAAA;AAAF,MAAQH,mBAAmB,EAAjC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMa,eAAe,GAAG;AAAA;;AAAA,oCAAMN,KAAK,CAACM,eAAZ,0DAAM,2BAAAN,KAAK,EAAmBE,KAAnB,CAAX;AAAA,GAAxB;;AACA,QAAMK,cAAc,GAAIC,MAAD;AAAA;;AAAA,oCAAqBR,KAAK,CAACO,cAA3B,0DAAqB,2BAAAP,KAAK,EAAkBQ,MAAlB,CAA1B;AAAA,GAAvB;;AAEA,QAAMC,YAAY,GAAIC,OAAD,IAAqB;AACtCP,IAAAA,QAAQ,CAACO,OAAD,CAAR;;AACA,QAAIA,OAAO,CAACC,MAAR,IAAkB,CAAtB,EAAyB;AACrBN,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAFD,MAEO;AACHA,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAoB,IAAA,IAAI,EAAE,EAA1B;AAA8B,IAAA,GAAG,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCJ,CAAC,CAAC,YAAD,CAArC,CAJJ,eAKI;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CA,CAAC,CAAC,eAAD,CAA5C,CALJ,eAMI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,cAAc,EAAC,eADnB;AAEI,IAAA,iBAAiB,0BAAED,KAAK,CAACY,aAAR,yDAAE,qBAAqBC,IAF5C;AAGI,IAAA,cAAc,EAAEN,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,eAAD;AACI,IAAA,YAAY,EAAEE,YADlB;AAEI,IAAA,UAAU,2BAAET,KAAK,CAACY,aAAR,0DAAE,sBAAqBE,SAFrC;AAGI,IAAA,cAAc,EAAC,mBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAWI,oBAAC,YAAD;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,QAAQ,EAAE,CAACV,YAFf;AAGI,IAAA,WAAW,EAAC,uBAHhB;AAII,IAAA,OAAO,EAAEE,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,CAAC,CAAC,UAAD,CAA9B,CALJ,CAXJ,CANJ,CADJ;AA4BH,CAhDM","sourcesContent":["import React, { useState } from 'react';\n\nimport { HeaderGradientIcon } from '@components/headerGradientIcon';\nimport { InputWithPrefix } from '@components/inputWithPrefix';\nimport { PrefixSelector } from '@components/prefixSelector';\nimport { RippleButton } from '@components/rippleButton';\nimport { useTypedTranslation } from '@languages/typedTranslation';\n\nexport const LoginSignInPage: IComponent<{\n    currentPrefix: IPrefix;\n    onPressContinue: (phone: string) => void;\n    onChangePrefix: (prefix: IPrefix) => void;\n}> = (props) => {\n    const { t } = useTypedTranslation();\n    const [phone, setPhone] = useState(\"\");\n    const [isValidPhone, setIsValidPhone] = useState(false);\n    const onPressContinue = () => props.onPressContinue?.(phone);\n    const onChangePrefix = (prefix: IPrefix) => props.onChangePrefix?.(prefix);\n\n    const onInputPhone = (pNumber: string) => {\n        setPhone(pNumber);\n        if (pNumber.length >= 9) {\n            setIsValidPhone(true);\n        } else {\n            setIsValidPhone(false);\n        }\n    };\n\n    return (\n        <div className=\"w-100 tl-ns tc pb4\">\n            <div className=\"w-100 db-ns dn pb3\">\n                <HeaderGradientIcon size={96} src=\"/images/phone.svg\" />\n            </div>\n            <p className=\"pa0 f2 ma0 mb2 hard\">{t(\"loginTitle\")}</p>\n            <p className=\"f5 w-100 pa0 pb3 ma0 light\">{t(\"loginSubTitle\")}</p>\n            <div className=\"mt4 mt3-ns w-100\">\n                <PrefixSelector\n                    classContainer=\"w-100 mwx7-ns\"\n                    currentPrefixCode={props.currentPrefix?.code}\n                    onSelectPrefix={onChangePrefix}\n                />\n                <InputWithPrefix\n                    onPhoneInput={onInputPhone}\n                    currPrefix={props.currentPrefix?.dial_code}\n                    classContainer=\"w-100 mwx7-ns mt3\"\n                />\n                <RippleButton\n                    className=\"mt3 bg-silver dark\"\n                    disabled={!isValidPhone}\n                    activeClass=\"bg-prime white shadow\"\n                    onClick={onPressContinue}>\n                    <strong className=\"pr5 pl5\">{t(\"continue\")}</strong>\n                </RippleButton>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}