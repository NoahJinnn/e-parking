{"ast":null,"code":"import { useEffect, useRef } from 'react';\n/**\n * Get mounted states of current component that init this hook\n */\n\nexport const useMountedState = () => {\n  // TODO: Refactor this some day\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const getMounted = () => mounted.current;\n\n  return getMounted;\n};","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/hooks/mount.ts"],"names":["useEffect","useRef","useMountedState","mounted","current","getMounted"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC;AACA,QAAMC,OAAO,GAAGF,MAAM,CAAC,KAAD,CAAtB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,OAAO,CAACC,OAAR,GAAkB,IAAlB;AACA,WAAO,MAAM;AACTD,MAAAA,OAAO,CAACC,OAAR,GAAkB,KAAlB;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMC,UAAU,GAAG,MAAMF,OAAO,CAACC,OAAjC;;AACA,SAAOC,UAAP;AACH,CAXM","sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Get mounted states of current component that init this hook\n */\nexport const useMountedState = () => {\n    // TODO: Refactor this some day\n    const mounted = useRef(false);\n    useEffect(() => {\n        mounted.current = true;\n        return () => {\n            mounted.current = false;\n        };\n    }, []);\n    const getMounted = () => mounted.current;\n    return getMounted;\n};\n"]},"metadata":{},"sourceType":"module"}