{"ast":null,"code":"var _jsxFileName = \"/home/nguyen/workspace/projects/eparking/WebForEndUser/src/components/mainNavBar/index.tsx\";\nimport './index.scss';\nimport React from 'react';\nimport { SVGSetting } from '@assets/svgc/setting';\nimport { LazyLoadImg } from '@components/lazyLoadImg';\nimport { useDynamicSelectValue } from '@hooks/dynamicValues';\nimport { useTypedTranslation } from '@languages/typedTranslation'; // Declare component props\n\nexport const MainNavBar = props => {\n  const {\n    page = \"map\"\n  } = props;\n  const {\n    t\n  } = useTypedTranslation();\n  const dynamicValue = useDynamicSelectValue();\n\n  const onChangePage = goToPage => {\n    var _props$onNavigateToPa;\n\n    (_props$onNavigateToPa = props.onNavigateToPage) === null || _props$onNavigateToPa === void 0 ? void 0 : _props$onNavigateToPa.call(props, goToPage);\n  };\n\n  const navigateItems = [{\n    icon: \"/images/position.svg\",\n    page: \"map\",\n    langIndex: \"homeMap\"\n  }, {\n    icon: \"/images/position.svg\",\n    page: \"map\",\n    langIndex: \"homeMap\"\n  }, {\n    icon: \"/images/history.svg\",\n    page: \"history\",\n    langIndex: \"homeHistory\"\n  }, {\n    icon: \"/images/message.svg\",\n    page: \"message\",\n    langIndex: \"homeMessage\"\n  }, {\n    icon: \"/images/account.svg\",\n    page: \"account\",\n    langIndex: \"homeAccount\"\n  }];\n  const renderItemNav = navigateItems.map((item, idx) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.page,\n      onClick: () => onChangePage(item.page),\n      style: {\n        animationDelay: `${(idx + 1) * 100}ms`\n      },\n      className: \"animate__animated animate__bounceIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `flex items-center justify-center flex-column relative ${item.page === page ? \"nav__active\" : \"\"} pt1 pb1 mt1 mb1 w-100`,\n      style: {\n        height: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `bg-white absolute left-0 ledBar h-100 nav__ledBar nav__ledBar-${item.page === page ? \"active\" : \"hide\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `flex flex-column pa2 h-100 items-center nav__content justify-center nav__content-${item.page === page ? \"active\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImg, {\n      src: item.icon,\n      className: \"flex h-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"flex ma0 white f6 pt1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, t(item.langIndex)))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex row w-100 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex nav nav__background flex-column justify-between\",\n    style: {\n      width: dynamicValue([90, 100, 120]),\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex pa3 w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shadow br-100 w-100 h-100 items-center justify-center flex overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(LazyLoadImg, {\n    src: require(\"@assets/images/admin.png\"),\n    className: \"w-100 h-100 ob-cover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }))), renderItemNav), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex pa3 items-end pointer items-center justify-center w-100\",\n    style: {\n      justifySelf: \"end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pa3 dim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SVGSetting, {\n    width: 32,\n    height: 32,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex w-100 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, props.children));\n};","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/components/mainNavBar/index.tsx"],"names":["React","SVGSetting","LazyLoadImg","useDynamicSelectValue","useTypedTranslation","MainNavBar","props","page","t","dynamicValue","onChangePage","goToPage","onNavigateToPage","navigateItems","icon","langIndex","renderItemNav","map","item","idx","animationDelay","height","width","require","justifySelf","children"],"mappings":"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","sourcesContent":["import './index.scss';\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SVGSetting } from '@assets/svgc/setting';\nimport { LazyLoadImg } from '@components/lazyLoadImg';\nimport { useDynamicSelectValue } from '@hooks/dynamicValues';\nimport { useTypedTranslation } from '@languages/typedTranslation';\n\n// Declare component props\nexport interface IMainNavBarProps {\n    onNavigateToPage: (page: TMainPages) => void;\n    page?: TMainPages;\n}\n\ninterface IBarItem {\n    icon: string;\n    page: TMainPages;\n    langIndex: string;\n}\n\nexport const MainNavBar: IComponent<IMainNavBarProps> = (props) => {\n    const { page = \"map\" } = props;\n    const { t } = useTypedTranslation();\n    const dynamicValue = useDynamicSelectValue();\n    const onChangePage = (goToPage: TMainPages) => {\n        props.onNavigateToPage?.(goToPage);\n    };\n    const navigateItems: IBarItem[] = [\n        {\n            icon: \"/images/position.svg\",\n            page: \"map\",\n            langIndex: \"homeMap\",\n        },\n        {\n            icon: \"/images/position.svg\",\n            page: \"map\",\n            langIndex: \"homeMap\",\n        },\n        {\n            icon: \"/images/history.svg\",\n            page: \"history\",\n            langIndex: \"homeHistory\",\n        },\n        {\n            icon: \"/images/message.svg\",\n            page: \"message\",\n            langIndex: \"homeMessage\",\n        },\n        {\n            icon: \"/images/account.svg\",\n            page: \"account\",\n            langIndex: \"homeAccount\",\n        },\n    ];\n\n    const renderItemNav = navigateItems.map((item, idx) => {\n        return (\n            <div\n                key={item.page}\n                onClick={() => onChangePage(item.page)}\n                style={{ animationDelay: `${(idx + 1) * 100}ms` }}\n                className=\"animate__animated animate__bounceIn\">\n                <div\n                    className={`flex items-center justify-center flex-column relative ${\n                        item.page === page ? \"nav__active\" : \"\"\n                    } pt1 pb1 mt1 mb1 w-100`}\n                    style={{ height: 80 }}>\n                    <div\n                        className={`bg-white absolute left-0 ledBar h-100 nav__ledBar nav__ledBar-${\n                            item.page === page ? \"active\" : \"hide\"\n                        }`}\n                    />\n                    <div\n                        className={`flex flex-column pa2 h-100 items-center nav__content justify-center nav__content-${\n                            item.page === page ? \"active\" : \"\"\n                        }`}>\n                        <LazyLoadImg src={item.icon} className=\"flex h-50\" />\n                        <p className=\"flex ma0 white f6 pt1\">{t(item.langIndex as any)}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    });\n\n    return (\n        <div className=\"flex row w-100 h-100\">\n            <div\n                className=\"flex nav nav__background flex-column justify-between\"\n                style={{ width: dynamicValue([90, 100, 120]), height: \"100vh\" }}>\n                <div>\n                    <div className=\"flex pa3 w-100\">\n                        <div className=\"shadow br-100 w-100 h-100 items-center justify-center flex overflow-hidden\">\n                            <LazyLoadImg src={require(\"@assets/images/admin.png\")} className=\"w-100 h-100 ob-cover\" />\n                        </div>\n                    </div>\n                    {renderItemNav}\n                </div>\n                <div className=\"flex pa3 items-end pointer items-center justify-center w-100\" style={{ justifySelf: \"end\" }}>\n                    <div className=\"pa3 dim\">\n                        <SVGSetting width={32} height={32} />\n                    </div>\n                </div>\n            </div>\n            <div className={\"flex w-100 h-100\"}>{props.children}</div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}