{"ast":null,"code":"var _jsxFileName = \"/home/nguyen/workspace/projects/eparking/WebForEndUser/src/router.tsx\";\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { CustomPickerUtils } from '@components/highOrderComponents/customPickerUtils';\nimport { Loader } from '@components/highOrderComponents/loader';\nimport { MainNavBar } from '@components/mainNavBar';\nimport { useDarkMode } from '@hooks/darkmode';\nimport { useDidMount } from '@hooks/utils';\nimport { useTypedTranslation } from '@languages/typedTranslation';\nimport { loginState } from '@states/app';\nimport { gDebug } from '@utils/log';\nimport { Manager } from './manager';\n/**\n * Code splitting\n */\n\nconst LoginPage = lazy(() => import(\"./pages/login/index\").then(module => ({\n  default: module.LoginPage\n})));\nconst MapPage = lazy(() => import(\"./pages/map/index\").then(module => ({\n  default: module.MapScreen\n})));\nexport function AppSwitcher() {\n  const [login] = useRecoilState(loginState);\n  const location = useLocation();\n  return /*#__PURE__*/React.createElement(Switch, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, login && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(LoginPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppMainSwitcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })));\n}\nexport function AppMainSwitcher() {\n  const location = useLocation();\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(\"map\");\n  useDidMount(() => {\n    if (location.pathname === \"/\") {\n      history.replace(\"/map\");\n    }\n  });\n  useEffect(() => {\n    gDebug.i(\"AppMainSwitcher\", \"Switch to new tab\", currentPage);\n    history.push(`/${currentPage}`);\n  }, [currentPage, history]);\n  return /*#__PURE__*/React.createElement(Switch, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MainNavBar, {\n    page: currentPage,\n    onNavigateToPage: setCurrentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MapPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }))));\n}\nexport function RootRouter() {\n  const dark = useDarkMode();\n  const {\n    t\n  } = useTypedTranslation();\n  const [loaderMess] = useState(t(\"LoaderPrepareData\"));\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `fixed top-0 left-0 h-100 w-100 z--1 app__${dark ? \"dark\" : \"light\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Manager, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomPickerUtils, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Loader, {\n      mess: \"Loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    mess: loaderMess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AppSwitcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  })))))));\n}","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/router.tsx"],"names":["React","lazy","Suspense","useEffect","useState","BrowserRouter","Router","Redirect","Route","Switch","useHistory","useLocation","useRecoilState","CustomPickerUtils","Loader","MainNavBar","useDarkMode","useDidMount","useTypedTranslation","loginState","gDebug","Manager","LoginPage","then","module","default","MapPage","MapScreen","AppSwitcher","login","location","AppMainSwitcher","history","currentPage","setCurrentPage","pathname","replace","i","push","RootRouter","dark","t","loaderMess"],"mappings":"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","sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router, Redirect, Route, Switch, useHistory, useLocation\n} from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\n\nimport { CustomPickerUtils } from '@components/highOrderComponents/customPickerUtils';\nimport { Loader } from '@components/highOrderComponents/loader';\nimport { MainNavBar } from '@components/mainNavBar';\nimport { useDarkMode } from '@hooks/darkmode';\nimport { useDidMount } from '@hooks/utils';\nimport { useTypedTranslation } from '@languages/typedTranslation';\nimport { loginState } from '@states/app';\nimport { gDebug } from '@utils/log';\n\nimport { Manager } from './manager';\n\n/**\n * Code splitting\n */\nconst LoginPage = lazy(() => import(\"./pages/login/index\").then((module) => ({ default: module.LoginPage })));\nconst MapPage = lazy(() => import(\"./pages/map/index\").then((module) => ({ default: module.MapScreen })));\n\nexport function AppSwitcher () {\n    const [login] = useRecoilState(loginState);\n    const location = useLocation();\n    return (\n        <Switch location={location}>\n            <Route path=\"/login\">\n                {login && <Redirect to=\"/\" />}\n                <LoginPage />\n            </Route>\n            <Route path=\"/\">\n                {/* {!login && <Redirect to=\"/login\" />} */}\n                <AppMainSwitcher />\n            </Route>\n        </Switch>\n    );\n}\n\nexport function AppMainSwitcher () {\n    const location = useLocation();\n    const history = useHistory();\n    const [currentPage, setCurrentPage] = useState<TMainPages>(\"map\");\n    useDidMount(() => {\n        if (location.pathname === \"/\") {\n            history.replace(\"/map\");\n        }\n    });\n    useEffect(() => {\n        gDebug.i(\"AppMainSwitcher\", \"Switch to new tab\", currentPage);\n        history.push(`/${currentPage}`);\n    }, [currentPage, history]);\n    return (\n        <Switch location={location}>\n            <MainNavBar page={currentPage} onNavigateToPage={setCurrentPage}>\n                <Route path=\"/map\">\n                    <MapPage />\n                </Route>\n            </MainNavBar>\n        </Switch>\n    );\n}\n\nexport function RootRouter () {\n    const dark = useDarkMode();\n    const { t } = useTypedTranslation();\n    const [loaderMess] = useState(t(\"LoaderPrepareData\"));\n    return (\n        <Router>\n            <div className={`fixed top-0 left-0 h-100 w-100 z--1 app__${dark ? \"dark\" : \"light\"}`}>\n                <Manager>\n                    <CustomPickerUtils>\n                        <Suspense fallback={<Loader mess=\"Loading\"></Loader>}>\n                            <Loader mess={loaderMess}>\n                                <AppSwitcher />\n                            </Loader>\n                        </Suspense>\n                    </CustomPickerUtils>\n                </Manager>\n            </div>\n        </Router>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}