{"ast":null,"code":"import { useRecoilState } from 'recoil';\nimport { mapMarkerState } from '@states/map';\nexport const useMarkersHook = () => {\n  const [markers, setMarkers] = useRecoilState(mapMarkerState);\n  const availableRange = [];\n\n  const addMarkers = input => {\n    if (input) {\n      const filtered = input.filter(val => {\n        if (availableRange.includes(val.rangeKey)) {\n          return false;\n        }\n\n        availableRange.push(val.rangeKey);\n        return true;\n      });\n      setMarkers([...filtered, ...markers]);\n    }\n  };\n\n  return [markers, addMarkers];\n};","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/hooks/mapMakers.ts"],"names":["useRecoilState","mapMarkerState","useMarkersHook","markers","setMarkers","availableRange","addMarkers","input","filtered","filter","val","includes","rangeKey","push"],"mappings":"AAAA,SAASA,cAAT,QAA+B,QAA/B;AAEA,SAASC,cAAT,QAA+B,aAA/B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAA+C;AACzE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,cAAc,CAACC,cAAD,CAA5C;AACA,QAAMI,cAAwB,GAAG,EAAjC;;AACA,QAAMC,UAAU,GAAIC,KAAD,IAAsB;AACrC,QAAIA,KAAJ,EAAW;AACP,YAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAcC,GAAD,IAAS;AACnC,YAAIL,cAAc,CAACM,QAAf,CAAwBD,GAAG,CAACE,QAA5B,CAAJ,EAA2C;AACvC,iBAAO,KAAP;AACH;;AACDP,QAAAA,cAAc,CAACQ,IAAf,CAAoBH,GAAG,CAACE,QAAxB;AACA,eAAO,IAAP;AACH,OANgB,CAAjB;AAOAR,MAAAA,UAAU,CAAC,CAAC,GAAGI,QAAJ,EAAc,GAAGL,OAAjB,CAAD,CAAV;AACH;AACJ,GAXD;;AAYA,SAAO,CAACA,OAAD,EAAUG,UAAV,CAAP;AACH,CAhBM","sourcesContent":["import { useRecoilState } from 'recoil';\n\nimport { mapMarkerState } from '@states/map';\n\nexport const useMarkersHook = (): [IMarker[], (input: IMarker[]) => void] => {\n    const [markers, setMarkers] = useRecoilState(mapMarkerState);\n    const availableRange: string[] = [];\n    const addMarkers = (input: IMarker[]) => {\n        if (input) {\n            const filtered = input.filter((val) => {\n                if (availableRange.includes(val.rangeKey)) {\n                    return false;\n                }\n                availableRange.push(val.rangeKey);\n                return true;\n            });\n            setMarkers([...filtered, ...markers]);\n        }\n    };\n    return [markers, addMarkers];\n};\n"]},"metadata":{},"sourceType":"module"}