{"ast":null,"code":"var _jsxFileName = \"/home/nguyen/workspace/projects/eparking/WebForEndUser/src/components/rippleButton/index.tsx\";\nimport './index.scss';\nimport React from 'react';\n/**\n * Button\n * @author: Giang Nguyen\n */\n\nexport const RippleButton = props => {\n  // Constructor\n  const {\n    children,\n    className,\n    onClick,\n    disabled,\n    activeClass = \"\"\n  } = props;\n  const btn = React.createRef();\n\n  const handleClickButton = event => {\n    const {\n      pageX,\n      pageY,\n      currentTarget\n    } = event;\n    const rect = currentTarget.getBoundingClientRect();\n    const left = pageX - (rect.left + window.scrollX);\n    const top = pageY - (rect.top + window.scrollY);\n\n    if (!disabled) {\n      var _btn$current;\n\n      const ripples = document.createElement(\"span\");\n      ripples.style.left = left + \"px\";\n      ripples.style.top = top + \"px\";\n      ripples.classList.add(\"components__button-ripple\");\n      (_btn$current = btn.current) === null || _btn$current === void 0 ? void 0 : _btn$current.appendChild(ripples);\n      const timeout = setTimeout(() => {\n        clearTimeout(timeout);\n        ripples.remove();\n      }, 900);\n      onClick();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: `${className} components__button ${!disabled ? activeClass : \"o-60\"}`,\n    disabled: disabled,\n    onClick: event => handleClickButton(event),\n    ref: btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, children);\n};\nRippleButton.defaultProps = {\n  className: \"\",\n  disabled: false,\n  onClick: () => {}\n};","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/components/rippleButton/index.tsx"],"names":["React","RippleButton","props","children","className","onClick","disabled","activeClass","btn","createRef","handleClickButton","event","pageX","pageY","currentTarget","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","ripples","document","createElement","style","classList","add","current","appendChild","timeout","setTimeout","clearTimeout","remove","defaultProps"],"mappings":";AAAA,OAAO,cAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;AASA,OAAO,MAAMC,YAAoC,GAAIC,KAAD,IAAW;AAC3D;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA,WAAW,GAAG;AAAxD,MAA+DL,KAArE;AACA,QAAMM,GAAG,GAAGR,KAAK,CAACS,SAAN,EAAZ;;AAEA,QAAMC,iBAAiB,GAAIC,KAAD,IAAgD;AACtE,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,QAAkCH,KAAxC;AAEA,UAAMI,IAAI,GAAGD,aAAa,CAACE,qBAAd,EAAb;AACA,UAAMC,IAAI,GAAGL,KAAK,IAAIG,IAAI,CAACE,IAAL,GAAYC,MAAM,CAACC,OAAvB,CAAlB;AACA,UAAMC,GAAG,GAAGP,KAAK,IAAIE,IAAI,CAACK,GAAL,GAAWF,MAAM,CAACG,OAAtB,CAAjB;;AACA,QAAI,CAACf,QAAL,EAAe;AAAA;;AACX,YAAMgB,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAhB;AACAF,MAAAA,OAAO,CAACG,KAAR,CAAcR,IAAd,GAAqBA,IAAI,GAAG,IAA5B;AACAK,MAAAA,OAAO,CAACG,KAAR,CAAcL,GAAd,GAAoBA,GAAG,GAAG,IAA1B;AACAE,MAAAA,OAAO,CAACI,SAAR,CAAkBC,GAAlB,CAAsB,2BAAtB;AACA,sBAAAnB,GAAG,CAACoB,OAAJ,8DAAaC,WAAb,CAAyBP,OAAzB;AAEA,YAAMQ,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BC,QAAAA,YAAY,CAACF,OAAD,CAAZ;AACAR,QAAAA,OAAO,CAACW,MAAR;AACH,OAHyB,EAGvB,GAHuB,CAA1B;AAIA5B,MAAAA,OAAO;AACV;AACJ,GAnBD;;AAqBA,sBACI;AACI,IAAA,SAAS,EAAG,GAAED,SAAU,uBAAsB,CAACE,QAAD,GAAYC,WAAZ,GAA0B,MAAO,EADnF;AAEI,IAAA,QAAQ,EAAED,QAFd;AAGI,IAAA,OAAO,EAAGK,KAAD,IAAWD,iBAAiB,CAACC,KAAD,CAHzC;AAII,IAAA,GAAG,EAAEH,GAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKL,QALL,CADJ;AASH,CAnCM;AAqCPF,YAAY,CAACiC,YAAb,GAA4B;AACxB9B,EAAAA,SAAS,EAAE,EADa;AAExBE,EAAAA,QAAQ,EAAE,KAFc;AAGxBD,EAAAA,OAAO,EAAE,MAAM,CAAE;AAHO,CAA5B","sourcesContent":["import './index.scss';\n\nimport React from 'react';\n\n/**\n * Button\n * @author: Giang Nguyen\n */\nexport interface IRippleBtn {\n    children?: React.ReactNode;\n    className?: string;\n    activeClass?: string;\n    disabled?: boolean;\n    onClick?: any;\n}\n\nexport const RippleButton: IComponent<IRippleBtn> = (props) => {\n    // Constructor\n    const { children, className, onClick, disabled, activeClass = \"\" } = props;\n    const btn = React.createRef() as React.RefObject<HTMLButtonElement>;\n\n    const handleClickButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const { pageX, pageY, currentTarget } = event;\n\n        const rect = currentTarget.getBoundingClientRect();\n        const left = pageX - (rect.left + window.scrollX);\n        const top = pageY - (rect.top + window.scrollY);\n        if (!disabled) {\n            const ripples = document.createElement(\"span\");\n            ripples.style.left = left + \"px\";\n            ripples.style.top = top + \"px\";\n            ripples.classList.add(\"components__button-ripple\");\n            btn.current?.appendChild(ripples);\n\n            const timeout = setTimeout(() => {\n                clearTimeout(timeout);\n                ripples.remove();\n            }, 900);\n            onClick();\n        }\n    };\n\n    return (\n        <button\n            className={`${className} components__button ${!disabled ? activeClass : \"o-60\"}`}\n            disabled={disabled}\n            onClick={(event) => handleClickButton(event)}\n            ref={btn}>\n            {children}\n        </button>\n    );\n};\n\nRippleButton.defaultProps = {\n    className: \"\",\n    disabled: false,\n    onClick: () => {},\n};\n"]},"metadata":{},"sourceType":"module"}