{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { gDebug } from '@utils/log';\n/**\n * Call an function after component did mount\n * @param cb Callback function for using\n */\n\nexport const useDidMount = (cb = () => {}) => {\n  useEffect(() => {\n    cb();\n    return () => {}; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return true;\n};\nexport const useCacheValue = () => {\n  const [val, setVal] = useState();\n  const [cacheDict, setCacheDict] = useState({});\n\n  const setNewVal = async (input, key, update) => {\n    gDebug.i(\"useCacheValue\", \"Current cache dict\", cacheDict);\n\n    if (cacheDict[input[key]]) {\n      setVal(cacheDict[input[key]]);\n    } else {\n      setVal(undefined);\n      const data = await update(input);\n      setCacheDict({ ...cacheDict,\n        [input[key]]: data\n      });\n      setVal(data);\n    }\n  };\n\n  return [val, setNewVal];\n};","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebForEndUser/src/hooks/utils.ts"],"names":["useEffect","useState","gDebug","useDidMount","cb","useCacheValue","val","setVal","cacheDict","setCacheDict","setNewVal","input","key","update","i","undefined","data"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,MAAT,QAAuB,YAAvB;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAE,GAAG,MAAM,CAAE,CAAd,KAAmB;AAC1CJ,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,EAAE;AACF,WAAO,MAAM,CAAE,CAAf,CAFY,CAGZ;AACH,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAO,IAAP;AACH,CAPM;AASP,OAAO,MAAMC,aAAa,GAAG,MAAqF;AAC9G,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,EAA9B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAM,EAAN,CAA1C;;AACA,QAAMS,SAAS,GAAG,OAAOC,KAAP,EAAmBC,GAAnB,EAAgCC,MAAhC,KAAgE;AAC9EX,IAAAA,MAAM,CAACY,CAAP,CAAS,eAAT,EAA0B,oBAA1B,EAAgDN,SAAhD;;AACA,QAAIA,SAAS,CAACG,KAAK,CAACC,GAAD,CAAN,CAAb,EAA2B;AACvBL,MAAAA,MAAM,CAACC,SAAS,CAACG,KAAK,CAACC,GAAD,CAAN,CAAV,CAAN;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACQ,SAAD,CAAN;AACA,YAAMC,IAAI,GAAG,MAAMH,MAAM,CAACF,KAAD,CAAzB;AACAF,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,SAACG,KAAK,CAACC,GAAD,CAAN,GAAcI;AAA9B,OAAD,CAAZ;AACAT,MAAAA,MAAM,CAACS,IAAD,CAAN;AACH;AACJ,GAVD;;AAWA,SAAO,CAACV,GAAD,EAAMI,SAAN,CAAP;AACH,CAfM","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { gDebug } from '@utils/log';\n\n/**\n * Call an function after component did mount\n * @param cb Callback function for using\n */\nexport const useDidMount = (cb = () => {}) => {\n    useEffect(() => {\n        cb();\n        return () => {};\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return true;\n};\n\nexport const useCacheValue = (): [any, (input: any, key: string, update: (input: any) => Promise<any>) => any] => {\n    const [val, setVal] = useState();\n    const [cacheDict, setCacheDict] = useState<any>({});\n    const setNewVal = async (input: any, key: string, update: (input: any) => any) => {\n        gDebug.i(\"useCacheValue\", \"Current cache dict\", cacheDict);\n        if (cacheDict[input[key]]) {\n            setVal(cacheDict[input[key]]);\n        } else {\n            setVal(undefined);\n            const data = await update(input);\n            setCacheDict({ ...cacheDict, [input[key]]: data });\n            setVal(data);\n        }\n    };\n    return [val, setNewVal];\n};\n"]},"metadata":{},"sourceType":"module"}