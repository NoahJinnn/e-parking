service:
  name: authen-service-api

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin
  - serverless-prune-plugin

custom: ${file(../../serverless.common.yml):custom}

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  region: ap-southeast-1
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource: "*"

  #    - ${file(iam/UserIAM.yml):UserTableIAM}
  #    - ${file(iam/UserSocialIAM.yml):UserSocialTableIAM}
  #    - ${file(iam/UserSocialProfileIAM.yml):UserSocialProfileTableIAM}

  environment:
    stage: ${self:custom.stage}
    resourcesStage: ${self:custom.resourcesStage}

  apiGateway:
    restApiId:
      "Fn::ImportValue": ${self:provider.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId:
      "Fn::ImportValue": ${self:provider.stage}-ExtApiGatewayRestApiRootResourceId

functions:
  auth:
    handler: handlers/auth.handler
    cors: true
  otpGenerate:
    handler: handlers/generateOTPCode.handler
    iamRoleStatementsInherit: true

    events:
      - http:
          path: /otp-generation
          method: POST
          cors: true
  signIn:
    handler: handlers/signIn.handler
    events:
      - http:
          path: /sign-in
          method: POST
          cors: true
  createSocialUser:
    handler: handlers/social/createSocialUser.handler
    events:
      - http:
          path: /social
          method: POST
          cors: true
  getSocialUser:
    handler: handlers/social/getSocialUser.handler
    events:
      - http:
          path: /social/info
          method: POST
  updateSocialUser:
    handler: handlers/social/updateSocialUser.handler
    events:
      - http:
          path: /social
          method: PUT
          authorizer: auth

  privateEndpoint:
    handler: handlers/private.handler
    events:
      - http:
          path: private
          method: POST
          authorizer: auth
          cors: true
