{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Fragment, useState, useEffect, useCallback } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport smoothscroll from 'smoothscroll-polyfill'; // Languages\n\nimport { i18n, appWithTranslation } from '@languages/index';\n// Components\nimport { Header, Footer, Img, Splash } from '@components/index'; // Redux\n\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport reduxStore from '@redux/store';\n/**\n * App layout\n * @author: Giang Nguyen\n */\n\nvar AppLayout = function AppLayout(props) {\n  // Constructor\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      store = props.store,\n      router = props.router;\n\n  var _useState = useState({\n    isShowMenu: router.pathname != '/' ? false : true,\n    isScroll: false,\n    isSticky: false,\n    isShowBackTop: false,\n    pageLoading: true,\n    section: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var isShowMenu = state.isShowMenu,\n      isScroll = state.isScroll,\n      isSticky = state.isSticky,\n      isShowBackTop = state.isShowBackTop,\n      pageLoading = state.pageLoading,\n      section = state.section; // useEffect as componentDidMount\n\n  useEffect(function () {\n    smoothscroll.polyfill();\n    loadPage();\n  }, []); // useEffect as componentDidUpdate for router.pathname\n\n  useEffect(function () {\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isShowMenu: router.pathname != '/' ? false : true\n      });\n    });\n  }, [router.pathname]);\n\n  var loadPage = function loadPage() {\n    var interval = setInterval(function () {\n      if (!process.server && document.readyState === 'complete') {\n        clearInterval(interval);\n        setTimeout(function () {\n          setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              pageLoading: false\n            });\n          });\n        }, 800);\n      }\n    }, 100);\n  };\n\n  var handleScroll = useCallback(function () {\n    var body = document.body;\n    var client = document.documentElement;\n    client = client.clientHeight ? client : body; // Handle sticky header\n\n    if (client.scrollTop > 0 && !isSticky) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSticky: true\n        });\n      });\n    }\n\n    if (client.scrollTop <= 0 && isSticky) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSticky: false\n        });\n      });\n    }\n\n    if (!isScroll) {\n      // Handle active menu item\n      var elements = document.querySelectorAll('div.components__header-menu-item');\n      elements.forEach(function (elm, index) {\n        var current_element_id = elm.getAttribute('data-toggle');\n        var current_element = document.getElementById(current_element_id ? current_element_id : '');\n        var next_element_id = elements[index + 1] ? elements[index + 1].getAttribute('data-toggle') : '';\n        var next_element = document.getElementById(next_element_id ? next_element_id : '');\n        var first_element_id = elements[0] ? elements[0].getAttribute('data-toggle') : '';\n        var first_element = document.getElementById(first_element_id ? first_element_id : '');\n\n        if (current_element) {\n          var current_offset_top = current_element.offsetTop - 175;\n\n          if (next_element) {\n            var next_offset_top = next_element.offsetTop - 175;\n\n            if (client.scrollTop >= current_offset_top && client.scrollTop < next_offset_top) {\n              setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  section: current_element_id ? current_element_id : ''\n                });\n              });\n            }\n          } else {\n            if (client.scrollTop >= current_offset_top) {\n              setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  section: current_element_id ? current_element_id : ''\n                });\n              });\n            }\n          }\n        }\n\n        if (first_element) {\n          var first_offset_top = first_element.offsetTop - 155;\n\n          if (client.scrollTop < first_offset_top) {\n            setState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                section: ''\n              });\n            });\n          }\n        }\n      });\n    } // Handle show back to top button\n\n\n    if (document.documentElement.scrollTop >= 100 && !isShowBackTop) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isShowBackTop: true\n        });\n      });\n    }\n\n    if (document.documentElement.scrollTop < 100 && isShowBackTop) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isShowBackTop: false\n        });\n      });\n    }\n  }, [isScroll, isSticky, isShowBackTop]); // useEffect as componentDidUpdate and componentWillUnmount for handleScroll\n\n  useEffect(function () {\n    window.addEventListener('load', handleScroll);\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      window.removeEventListener('load', handleScroll);\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]);\n\n  var scrollTo = function scrollTo(section) {\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        isScroll: true,\n        section: section\n      });\n    });\n    setTimeout(function () {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isScroll: false\n        });\n      });\n    }, 1000);\n  };\n\n  var backToTop = function backToTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"layouts__app\"\n  }, __jsx(Provider, {\n    store: store\n  }, __jsx(ToastContainer, null), __jsx(Header, {\n    router: router,\n    isShowMenu: isShowMenu,\n    isSticky: isSticky,\n    pageLoading: pageLoading,\n    section: section,\n    scrollTo: scrollTo\n  }), !pageLoading ? __jsx(Fragment, null, __jsx(Img, {\n    className: \"layouts__app-bg\",\n    src: \"/image-asset/app-bg.png\"\n  }), __jsx(\"div\", {\n    className: \"layouts__app-backtop justify-center items-center \".concat(isShowBackTop ? 'flex' : 'dn'),\n    onClick: function onClick() {\n      return backToTop();\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-chevron-up\"\n  })), __jsx(\"div\", {\n    className: \"layouts__app-body\",\n    id: \"body-section\"\n  }, __jsx(Component, _extends({}, pageProps, {\n    router: router,\n    locale: i18n.language ? i18n.language : 'en'\n  })))) : __jsx(Splash, null), __jsx(Footer, {\n    router: router,\n    pageLoading: pageLoading\n  })));\n};\n\nAppLayout.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var Component, ctx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Component = _ref.Component, ctx = _ref.ctx;\n            _context.t0 = _objectSpread;\n            _context.t1 = {};\n\n            if (!Component.getInitialProps) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return Component.getInitialProps(ctx);\n\n          case 6:\n            _context.t2 = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 9:\n            _context.t2 = {};\n\n          case 10:\n            _context.t3 = _context.t2;\n            _context.t4 = (0, _context.t0)(_context.t1, _context.t3);\n            return _context.abrupt(\"return\", {\n              pageProps: _context.t4\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default withRedux(reduxStore)(appWithTranslation(AppLayout));","map":null,"metadata":{},"sourceType":"module"}