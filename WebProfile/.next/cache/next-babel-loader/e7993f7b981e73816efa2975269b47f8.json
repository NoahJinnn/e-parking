{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\n/**\n * Carousel\n * @author: Giang Nguyen\n */\n\nconst Carousel = props => {\n  // Constructor\n  const {\n    infinite,\n    index,\n    id,\n    children\n  } = props;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    slideIndex: index\n  });\n  const {\n    slideIndex\n  } = state; // useEffect as componentDidMount and componentWillUnmount\n\n  useEffect(() => {\n    smoothscroll.polyfill();\n    setTimeout(() => {\n      processSlide();\n    }, 10);\n    return () => {\n      processSlide('remove');\n    };\n  }, []);\n\n  const processSlide = (action = '') => {\n    const carousel = document.getElementById(`carousel_${id}`);\n\n    if (action == 'remove') {\n      carousel === null || carousel === void 0 ? void 0 : carousel.removeEventListener('scroll', () => {});\n    } else {\n      var _document$getElementB;\n\n      const children_length = React.Children.toArray(children).length; // Define previous or next slide\n\n      let prevIndex = slideIndex - 1;\n\n      if (slideIndex == 0) {\n        if (infinite) {\n          prevIndex = children_length - 1;\n        } else {\n          prevIndex = 0;\n        }\n      }\n\n      let nextIndex = slideIndex + 1;\n\n      if (slideIndex == children_length - 1) {\n        if (infinite) {\n          nextIndex = 0;\n        } else {\n          nextIndex = children_length - 1;\n        }\n      }\n\n      const slide_id = action == 'prev' ? `${id}${prevIndex}` : action == 'next' ? `${id}${nextIndex}` : `${id}${slideIndex}`;\n      let offsetLeft = (_document$getElementB = document.getElementById(slide_id)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.offsetLeft; // Scroll to slide\n\n      carousel === null || carousel === void 0 ? void 0 : carousel.scrollTo({\n        left: offsetLeft ? offsetLeft : 0,\n        behavior: action ? 'smooth' : 'auto'\n      }); // Handle slide index\n\n      carousel === null || carousel === void 0 ? void 0 : carousel.addEventListener('scroll', () => {\n        let elements = document.querySelectorAll(`div.components__carousel-item.${id}`);\n\n        for (const i in elements) {\n          let element = elements[i];\n          const next_element = document.getElementById(`${id}${parseInt(i) + 1}`);\n\n          if (element instanceof HTMLElement) {\n            if (!next_element && carousel.scrollLeft >= element.offsetLeft - 100) {\n              setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n                slideIndex: children_length - 1\n              }));\n            }\n\n            if (next_element && carousel.scrollLeft >= element.offsetLeft && carousel.scrollLeft <= next_element.offsetLeft) {\n              setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n                slideIndex: parseInt(i)\n              }));\n            }\n          }\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"components__carousel\"\n  }, __jsx(\"div\", {\n    className: \"components__carousel-index pv2 ph3\"\n  }, slideIndex + 1, \" / \", React.Children.toArray(children).length), __jsx(\"div\", {\n    className: \"components__carousel-wrapper\",\n    id: `carousel_${id}`\n  }, __jsx(\"div\", {\n    className: \"flex\"\n  }, React.Children.map(children, (child, i) => __jsx(\"div\", {\n    className: `components__carousel-item ${id}`,\n    key: i,\n    id: `${id}${i}`\n  }, child)))), __jsx(\"div\", {\n    className: \"components__carousel-prev flex justify-center items-center\",\n    onClick: () => processSlide('prev')\n  }, __jsx(\"i\", {\n    className: \"fa fa-chevron-left\"\n  })), __jsx(\"div\", {\n    className: \"components__carousel-next flex justify-center items-center\",\n    onClick: () => processSlide('next')\n  }, __jsx(\"i\", {\n    className: \"fa fa-chevron-right\"\n  })));\n};\n\nCarousel.defaultProps = {\n  index: 0,\n  infinite: true\n};\nexport default Carousel;","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebProfile/components/client/Carousel.tsx"],"names":["React","useState","useEffect","smoothscroll","Carousel","props","infinite","index","id","children","state","setState","slideIndex","polyfill","setTimeout","processSlide","action","carousel","document","getElementById","removeEventListener","children_length","Children","toArray","length","prevIndex","nextIndex","slide_id","offsetLeft","scrollTo","left","behavior","addEventListener","elements","querySelectorAll","i","element","next_element","parseInt","HTMLElement","scrollLeft","prevState","map","child","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n/**\n * Carousel\n * @author: Giang Nguyen\n */\ninterface Props {\n    infinite: boolean;\n    index: number;\n    id: string;\n    children: React.ReactNode;\n}\ninterface IComponentCarousel<P = {}> extends React.FC<P> {\n    defaultProps: Partial<P>;\n}\n\nconst Carousel: IComponentCarousel<Props> = (props) => {\n    // Constructor\n    const { infinite, index, id, children } = props;\n    const [state, setState] = useState({\n        slideIndex: index as number,\n    });\n    const { slideIndex } = state;\n\n    // useEffect as componentDidMount and componentWillUnmount\n    useEffect(() => {\n        smoothscroll.polyfill();\n\n        setTimeout(() => {\n            processSlide();\n        }, 10);\n        return () => {\n            processSlide('remove');\n        };\n    }, []);\n\n    const processSlide = (action: string = '') => {\n        const carousel = document.getElementById(`carousel_${id}`);\n        if (action == 'remove') {\n            carousel?.removeEventListener('scroll', () => {});\n        } else {\n            const children_length = React.Children.toArray(children).length;\n\n            // Define previous or next slide\n            let prevIndex = slideIndex - 1;\n            if (slideIndex == 0) {\n                if (infinite) {\n                    prevIndex = children_length - 1;\n                } else {\n                    prevIndex = 0;\n                }\n            }\n            let nextIndex = slideIndex + 1;\n            if (slideIndex == children_length - 1) {\n                if (infinite) {\n                    nextIndex = 0;\n                } else {\n                    nextIndex = children_length - 1;\n                }\n            }\n            const slide_id = action == 'prev' ? `${id}${prevIndex}` : action == 'next' ? `${id}${nextIndex}` : `${id}${slideIndex}`;\n            let offsetLeft = document.getElementById(slide_id)?.offsetLeft;\n\n            // Scroll to slide\n            carousel?.scrollTo({ left: offsetLeft ? offsetLeft : 0, behavior: action ? 'smooth' : 'auto' });\n\n            // Handle slide index\n            carousel?.addEventListener('scroll', () => {\n                let elements = document.querySelectorAll(`div.components__carousel-item.${id}`);\n                for (const i in elements) {\n                    let element = elements[i];\n                    const next_element = document.getElementById(`${id}${parseInt(i) + 1}`);\n                    if (element instanceof HTMLElement) {\n                        if (!next_element && carousel.scrollLeft >= element.offsetLeft - 100) {\n                            setState((prevState) => ({\n                                ...prevState,\n                                slideIndex: children_length - 1,\n                            }));\n                        }\n                        if (next_element && carousel.scrollLeft >= element.offsetLeft && carousel.scrollLeft <= next_element.offsetLeft) {\n                            setState((prevState) => ({\n                                ...prevState,\n                                slideIndex: parseInt(i),\n                            }));\n                        }\n                    }\n                }\n            });\n        }\n    };\n\n    return (\n        <div className=\"components__carousel\">\n            <div className=\"components__carousel-index pv2 ph3\">\n                {slideIndex + 1} / {React.Children.toArray(children).length}\n            </div>\n            <div className=\"components__carousel-wrapper\" id={`carousel_${id}`}>\n                <div className=\"flex\">\n                    {React.Children.map(children, (child, i) => (\n                        <div className={`components__carousel-item ${id}`} key={i} id={`${id}${i}`}>\n                            {child}\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className=\"components__carousel-prev flex justify-center items-center\" onClick={() => processSlide('prev')}>\n                <i className=\"fa fa-chevron-left\" />\n            </div>\n            <div className=\"components__carousel-next flex justify-center items-center\" onClick={() => processSlide('next')}>\n                <i className=\"fa fa-chevron-right\" />\n            </div>\n        </div>\n    );\n};\n\nCarousel.defaultProps = {\n    index: 0,\n    infinite: true,\n};\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}