{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { firebase } from '@plugins/index'; // Languages\n\n// Data\nimport data from '@assets/data/data'; // Components\n\nimport { Carousel, Img } from '@components/index'; // Redux\n\nimport { useSelector } from 'react-redux';\n\nconst ProductDetailPage = props => {\n  // Constructor\n  const {\n    router\n  } = props;\n  const locale = useSelector(states => states.locale);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    product: data[locale].products[router.query.slug],\n    isFullScreen: false,\n    imageIndex: 0\n  });\n  const {\n    product,\n    isFullScreen,\n    imageIndex\n  } = state; // useEffect as componentDidMount\n\n  useEffect(() => {\n    firebase.analytics().logEvent(product.firebase_event);\n  }, []); // useEffect as componentDidUpdate for locale\n\n  useEffect(() => {\n    setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      product: data[locale].products[router.query.slug]\n    }));\n  }, [locale]);\n\n  const processFullScreen = (index, action) => {\n    if (action == 'open') {\n      document.body.classList.add('stop-scrolling');\n    } else {\n      document.body.classList.remove('stop-scrolling');\n    }\n\n    setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      isFullScreen: action == 'open' ? true : false,\n      imageIndex: index\n    }));\n  };\n\n  const renderAssets = () => {\n    const {\n      images,\n      thumbnails,\n      videos\n    } = product;\n    const assets = [];\n    images === null || images === void 0 ? void 0 : images.map((image, index) => assets.push(__jsx(Img, {\n      key: index,\n      isBlur: true,\n      placeholder: thumbnails && thumbnails[index],\n      src: image,\n      onClick: () => processFullScreen(index, 'open')\n    })));\n    videos === null || videos === void 0 ? void 0 : videos.map((video, index) => assets.push(__jsx(\"video\", {\n      key: index,\n      controls: true\n    }, __jsx(\"source\", {\n      src: video\n    }))));\n    return assets;\n  };\n\n  return __jsx(\"div\", {\n    className: \"pages__product_detail bases__container white\"\n  }, !isFullScreen ? __jsx(\"div\", {\n    className: \"flex flex-wrap\"\n  }, __jsx(\"div\", {\n    className: \"pages__product_detail-slider w-100 w-50-l ph3\"\n  }, __jsx(Carousel, {\n    index: imageIndex,\n    id: \"products\"\n  }, renderAssets())), __jsx(\"div\", {\n    className: \"pages__product_detail-content w-100 w-50-l ph3\"\n  }, __jsx(\"div\", {\n    className: \"pages__product_detail-content_heading bases__text--bold bases__font--24 tl\"\n  }, product.title), __jsx(\"div\", {\n    className: \"pages__product_detail-content_desc bases__font--16 tl mt4\"\n  }, product.description))) : __jsx(\"div\", {\n    className: \"pages__product_detail-overlay flex flex-column justify-center\"\n  }, __jsx(\"div\", {\n    className: \"pages__product_detail-overlay_closebtn mt2 mr3\",\n    onClick: () => processFullScreen(0, 'close')\n  }, __jsx(\"i\", {\n    className: \"bases__font--22 fa fa-times\"\n  })), __jsx(Carousel, {\n    index: imageIndex,\n    id: \"fullscreen\"\n  }, renderAssets())));\n};\n\nProductDetailPage.getInitialProps = async ctx => {\n  return {\n    query: ctx.query,\n    namespacesRequired: ['common']\n  };\n};\n\nexport default ProductDetailPage;","map":{"version":3,"sources":["/home/nguyen/workspace/projects/eparking/WebProfile/pages/product/slug.tsx"],"names":["useState","useEffect","firebase","data","Carousel","Img","useSelector","ProductDetailPage","props","router","locale","states","state","setState","product","products","query","slug","isFullScreen","imageIndex","analytics","logEvent","firebase_event","prevState","processFullScreen","index","action","document","body","classList","add","remove","renderAssets","images","thumbnails","videos","assets","map","image","push","video","title","description","getInitialProps","ctx","namespacesRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { AppInitialProps } from 'next/app';\n\nimport { firebase } from '@plugins/index';\n\n// Languages\nimport { Router } from 'next-i18next';\n\n// Data\nimport data from '@assets/data/data';\n\n// Components\nimport { Carousel, Img } from '@components/index';\n\n// Redux\nimport { useSelector } from 'react-redux';\nimport { ReduxStates } from '@redux/reducers';\n\n/**\n * Product detail page\n * @author: Giang Nguyen\n */\ninterface Props extends AppInitialProps {\n    router: Router;\n}\ntype LocaleKeys = 'en' | 'vi';\ntype ProductKeys = 'carousel-parking-system' | 'square-parking-system' | 'tor-parking-system';\n\ninterface INextProductDetailPage<P = {}> extends React.FC<P> {\n    getInitialProps: (ctx: any) => Promise<{ query: any; namespacesRequired: string[] }>;\n}\n\nconst ProductDetailPage: INextProductDetailPage<Props> = (props) => {\n    // Constructor\n    const { router } = props;\n    const locale = useSelector((states: ReduxStates) => states.locale);\n    const [state, setState] = useState({\n        product: data[locale as LocaleKeys].products[router.query.slug as ProductKeys] as any,\n        isFullScreen: false as boolean,\n        imageIndex: 0 as number,\n    });\n    const { product, isFullScreen, imageIndex } = state;\n\n    // useEffect as componentDidMount\n    useEffect(() => {\n        firebase.analytics().logEvent(product.firebase_event);\n    }, []);\n\n    // useEffect as componentDidUpdate for locale\n    useEffect(() => {\n        setState((prevState: any) => ({\n            ...prevState,\n            product: data[locale as LocaleKeys].products[router.query.slug as ProductKeys],\n        }));\n    }, [locale]);\n\n    const processFullScreen = (index: number, action: string) => {\n        if (action == 'open') {\n            document.body.classList.add('stop-scrolling');\n        } else {\n            document.body.classList.remove('stop-scrolling');\n        }\n        setState((prevState: any) => ({\n            ...prevState,\n            isFullScreen: action == 'open' ? true : false,\n            imageIndex: index,\n        }));\n    };\n\n    const renderAssets = () => {\n        const { images, thumbnails, videos } = product;\n        const assets: JSX.Element[] = [];\n        images?.map((image: any, index: number) =>\n            assets.push(\n                <Img\n                    key={index}\n                    isBlur={true}\n                    placeholder={thumbnails && thumbnails[index]}\n                    src={image}\n                    onClick={() => processFullScreen(index, 'open')}\n                />,\n            ),\n        );\n        videos?.map((video: any, index: number) =>\n            assets.push(\n                <video key={index} controls>\n                    <source src={video} />\n                </video>,\n            ),\n        );\n\n        return assets;\n    };\n\n    return (\n        <div className=\"pages__product_detail bases__container white\">\n            {!isFullScreen ? (\n                <div className=\"flex flex-wrap\">\n                    <div className=\"pages__product_detail-slider w-100 w-50-l ph3\">\n                        <Carousel index={imageIndex} id=\"products\">\n                            {renderAssets()}\n                        </Carousel>\n                    </div>\n                    <div className=\"pages__product_detail-content w-100 w-50-l ph3\">\n                        <div className=\"pages__product_detail-content_heading bases__text--bold bases__font--24 tl\">{product.title}</div>\n                        <div className=\"pages__product_detail-content_desc bases__font--16 tl mt4\">{product.description}</div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"pages__product_detail-overlay flex flex-column justify-center\">\n                    <div className=\"pages__product_detail-overlay_closebtn mt2 mr3\" onClick={() => processFullScreen(0, 'close')}>\n                        <i className=\"bases__font--22 fa fa-times\" />\n                    </div>\n                    <Carousel index={imageIndex} id=\"fullscreen\">\n                        {renderAssets()}\n                    </Carousel>\n                </div>\n            )}\n        </div>\n    );\n};\n\nProductDetailPage.getInitialProps = async (ctx: any) => {\n    return {\n        query: ctx.query,\n        namespacesRequired: ['common'],\n    };\n};\n\nexport default ProductDetailPage;\n"]},"metadata":{},"sourceType":"module"}